package lesson_2;

public class Main {
    public static void main(String[] args) {
        /**Арифметические операторы
         +  Складывает значения по обе стороны от оператора
         -  Вычитает правый операнд из левого операнда
         *  Умножает значения по обе стороны от оператора
         /  Оператор деления делит левый операнд на правый операнд
         %  Делит левый операнд на правый операнд и возвращает остаток
         ++  Инкремент - увеличивает значение операнда на 1 х++ постфиксная, ++х префиксная
         --  Декремент - уменьшает значение операнда на 1  х-- постфиксная, --х префиксная
         */
        //   int c = 10;
        //    int d = 3;
        //    int e = 10 % 3;
        /**
         * Операторы сравнения
         *
         * ==  Проверяет, равны или нет значения двух операндов, если да,
         *  то условие становится истинным  (A == B) – не верны
         *
         * !=  Проверяет, равны или нет значения двух операндов,
         *  если значения не равны, то условие становится истинным  (A != B) – значение истинна
         *
         * >  Проверяет, является ли значение левого операнда больше,
         *  чем значение правого операнда, если да, то условие становится истинным  (A > B) – не верны
         *
         * <  Проверяет, является ли значение левого операнда меньше,
         *  чем значение правого операнда, если да, то условие становится истинным  (A < B) – значение истинна
         *
         * >=  Проверяет, является ли значение левого операнда больше или равно значению правого операнда,
         *  если да, то условие становится истинным  (A >= B) – значение не верны
         *
         * <=  Проверяет, если значение левого операнда меньше или равно значению правого операнда,
         *  если да, то условие становится истинным  (A <= B) – значение истинна
         * */

        //boolean bool = 5 == 5;
        //System.out.println(bool);
        /**Логические операторы

         &&  Называется логический оператор «И». Если оба операнда являются не равны нулю, то условие становится истинным
         ||  Называется логический оператор «ИЛИ». Если любой из двух операндов не равен нулю, то условие становится истинным
         !  Называется логический оператор «НЕ». Использование меняет логическое состояние своего операнда.
         Если условие имеет значение true, то оператор логического «НЕ» будет делать false
         * */
        //  boolean bool = 5 == 5 || 5>5;
        //  System.out.println(bool);
        /**
         * if (условие) {
         * //действие(-я), которые выполняются, если условие истинно;
         * }
         * else if (условие) {
         * //действие(-я), которые выполняются, если условие истинно;
         * }
         * else if (условие) {
         * //действие(-я), которые выполняются, если условие истинно;
         * }
         * else {
         * //действие(-я), которые выполняются, если условие истинно;
         * }
         * */
        int a = 1;
        if (a == 3) {
            System.out.println("a equals 3");
        } else if (a == 5) {
            System.out.println("a equals 5");
        } else {
            System.out.println("a not 3 and 5");
        }
        /**
         * Витюша, [20.02.2023 21:09]
         * if (условие) {
         * //действие(-я), которые выполняются, если условие истинно;
         * }
         * else if (условие) {
         * //действие(-я), которые выполняются, если условие истинно;
         * }
         * else if (условие) {
         * //действие(-я), которые выполняются, если условие истинно;
         * }
         * else {
         * //действие(-я), которые выполняются, если условие истинно;
         * }
         *
         *
         * switch (ВыражениеДляВыбора) {
         *            case  (Значение1):
         *                Код1;
         *                break;
         *            case (Значение2):
         *                Код2;
         *                break;
         * ...
         *            case (ЗначениеN):
         *                КодN;
         *                break;
         *            default:
         *                КодВыбораПоУмолчанию;
         *                break;
         *        }
         * */

    }
}
